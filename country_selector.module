<?php

class CountrySelectorController {
  protected static $instance = NULL;

  protected $languageSource = NULL;
  protected $originalCache = FALSE;

  public static function hook_boot() {
    if (php_sapi_name() === 'cli') { return; }

    $instance = new CountrySelectorController(
      isset($_GET['country-selector-select']) ? $_GET['country-selector-select'] : NULL,
      $GLOBALS['base_url'],
      $_SERVER['HTTP_REFERER'],
      isset($_COOKIE['country_selector'])
    );
    if ($instance->isActive()) {
      self::$instance = $instance;
    }
  }

  public static function hook_init() {
    if (isset(self::$instance)) {
      self::$instance->redirect(current_path());
      self::$instance->serveFromCache();
    };
  }

  public function __construct($get, $base_url, $referer, $cookie) {
    $came_from_outside = substr($_SERVER['HTTP_REFERER'], 0, strlen($base_url)) != $base_url;
    if ($came_from_outside && !$cookie) {
      $this->languageSource = CountrySelectorGeoIp::fromDefaults();
      $this->setCookie();
      $this->deactivateCache();
    }
  }

  public function isActive() {
    return isset($this->languageSource);
  }

  protected function setCookie() {
    setcookie('country_selector', '1', 0, $GLOBALS['base_path']);
  }

  protected function deactivateCache() {
    if ($this->originalCache = variable_get('cache')) {
      $GLOBALS['conf']['cache'] = FALSE;
    }
  }

  protected function serveFromCache() {
    if ($this->$originalCache) {
      $GLOBALS['conf']['cache'] = $this->originalCache;
      $cache = drupal_page_get_cache();
      if (is_object($cache)) {
        header('X-Drupal-Cache: HIT');
        drupal_serve_page_from_cache($cache);
        if (variable_get('page_cache_invoke_hooks', TRUE)) {
          bootstrap_invoke_all('exit');
        }
        // We are done.
        exit;
      }
    }
  }

  public function redirect($path) {
    $langCode = $this->languageSource->selectLanguage();
    _country_selector_goto($langCode, $path);
  }

}

class CountrySelectorGeoIp {
  protected $path;
  protected $country;
  protected $links;
  protected $mapping;
  protected $defaultLanguage;
  protected $language;

  public static function fromDefaults() {
    // use @: see https://bugs.php.net/bug.php?id=59753
    $country = @geoip_country_code_by_name(ip_address());
    $mapping = variable_get('country_selector_mapping', array());
    $language = language_default()->language;
    return new CountrySelectorRedirect($mapping, $country, $language);
  }
  
  public function selectLanguage(){
    $country = &$this->country;
    $GLOBALS['country_selector_country'] = $country;
    $mapping = &$this->mapping;
    if (isset($mapping[$country])) {
      return $mapping[$country];
    } else {
      return $this->defaultLanguage;
    }
  }

  public function __construct($mapping, $country, $default_language) {
    $this->mapping = $mapping;
    $this->country = $country;
    $this->defaultLanguage = $default_language;
  }
}

/**
 * Implements hook_boot().
 * 
 * Checks if we possibly want to redirect to another URL and
 * disables page-cache if so.
 */
function country_selector_boot() {
  CountrySelectorController::hook_boot();
}

/**
 * Implements hook_init().
 * 
 * Do redirect if needed.
 */
function country_selector_init() {
  CountrySelectorController::hook_init();
}

function _country_selector_goto($lang, $path = NULL) {
  $path = isset($path) ? $path : current_path();
  $links = language_negotiation_get_switch_links('language', $path)->links;
  if (!isset($links[$lang]) || !isset($links[$lang]['href'])) {
    $lang = language_default()->language;
  }
  if (isset($links[$lang])) {
    $link = &$links[$lang];
    $path = isset($link['href']) ? $link['href'] : $path;
    drupal_goto($path, array('language' => $link['language']));
  }
}
