// Generated by CoffeeScript 1.10.0
var baseUrl, checkAndRedirect, getLanguageLinks, mayBeBot, referrerHasSameHost;

baseUrl = function(href) {
  var baseurl, p;
  p = href.indexOf('//');
  p = href.indexOf('/', p + 2);
  return baseurl = href.substr(0, p + 1);
};

referrerHasSameHost = function() {
  var base;
  if (document.referrer) {
    base = baseUrl(document.referrer);
    return window.location.href.substr(0, base.length) === base;
  }
  return false;
};

getLanguageLinks = function() {
  var e, i, len, links, ref;
  links = {};
  ref = document.querySelectorAll('link[rel="alternate"][hreflang]');
  for (i = 0, len = ref.length; i < len; i++) {
    e = ref[i];
    links[e.getAttribute('hreflang')] = e.getAttribute('href');
  }
  return links;
};

mayBeBot = function() {
  var agent, engine, i, iagent, j, len, len1, ref, ref1, search;
  agent = navigator.userAgent;
  if (!agent) {
    return true;
  }
  if (agent.indexOf('Mozilla') !== -1) {
    iagent = agent.toLowerCase();
    ref = ['bot', 'crawler', 'spider'];
    for (i = 0, len = ref.length; i < len; i++) {
      search = ref[i];
      if (iagent.indexOf(search) !== -1) {
        return true;
      }
    }
    return false;
  }
  ref1 = ['Webkit', 'Safari', 'Opera', 'Dillo', 'Lynx', 'Links', 'w3m', 'Midori', 'iCab'];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    engine = ref1[j];
    if (agent.indexOf(engine) !== -1) {
      return false;
    }
  }
  return true;
};

checkAndRedirect = function() {
  var current, links;
  if (referrerHasSameHost() || mayBeBot()) {
    return;
  }
  links = getLanguageLinks();
  current = document.getElementsByTagName('html')[0].getAttribute('lang');
  return jQuery.getJSON('/geoip-language-suggestions').done(function(data) {
    var i, lang, len;
    for (i = 0, len = data.length; i < len; i++) {
      lang = data[i];
      if (lang === current) {
        return;
      }
      if (links.hasOwnProperty(lang)) {
        window.location = links[lang];
      }
    }
  });
};

checkAndRedirect();
